version: '3.8'

services:
  app:
    build: .
    command: poetry uvicorn main:app --host 0.0.0.0 --port 8000
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db/postgres
    volumes:
      - .:/code/app
    ports:
      - "80:8000"
    depends_on:
      - db
      - alembic
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"
  
  testdb:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres_test
    volumes:
      - testdb-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5267:5432"

  alembic:
    build: .
    command: poetry alembic upgrade head
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db/postgres
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
  
  # test:
  #   build: .
  #   command: /bin/sh -c "poetry alembic upgrade head && poetry ptw"
  #   working_dir: /code/app
  #   environment:
  #     - DATABASE_URL=postgresql+asyncpg://postgres:postgres@testdb/postgres_test
  #   volumes:
  #     - .:/code/app
  #   depends_on:
  #     testdb:
  #       condition: service_healthy

volumes:
  db-data:
  testdb-data:
